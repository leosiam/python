แบบฝึกหัดที่ 1: สร้างคลาสพื้นฐาน
โจทย์: สร้างคลาส Car ที่มีคุณสมบัติดังนี้:

ตัวแปรของออบเจ็กต์: brand, model, year
เมธอดของออบเจ็กต์: car_info ที่จะคืนค่าข้อมูลรถยนต์ในรูปแบบ "Brand: [brand], Model: [model], Year: [year]"
ตัวอย่างผลลัพธ์:
=====================================================================================================
car1 = Car("Toyota", "Corolla", 2020)
car2 = Car("Honda", "Civic", 2018)

print(car1.car_info())  # Output: Brand: Toyota, Model: Corolla, Year: 2020
print(car2.car_info())  # Output: Brand: Honda, Model: Civic, Year: 2018

=====================================================================================================  
แบบฝึกหัดที่ 2: สร้างคลาสที่มีการคำนวณ
โจทย์: สร้างคลาส Rectangle ที่มีคุณสมบัติดังนี้:

ตัวแปรของออบเจ็กต์: width, height
เมธอดของออบเจ็กต์: area ที่จะคืนค่าพื้นที่ของสี่เหลี่ยม และ perimeter ที่จะคืนค่าความยาวรอบรูปของสี่เหลี่ยม
ตัวอย่างผลลัพธ์:

python
คัดลอกโค้ด
rect1 = Rectangle(5, 10)
rect2 = Rectangle(3, 4)

print(rect1.area())       # Output: 50
print(rect1.perimeter())  # Output: 30
print(rect2.area())       # Output: 12
print(rect2.perimeter())  # Output: 14

=====================================================================================================
แบบฝึกหัดที่ 3: สร้างคลาสที่มีการสืบทอด
โจทย์: สร้างคลาส Animal และคลาส Dog ที่สืบทอดจากคลาส Animal

คลาส Animal มีคุณสมบัติดังนี้:

ตัวแปรของออบเจ็กต์: name
เมธอดของออบเจ็กต์: speak ที่จะคืนค่าเป็น "Animal sound"
คลาส Dog มีคุณสมบัติดังนี้:

เมธอดของออบเจ็กต์: speak ที่จะคืนค่าเป็น "Woof!" และเมธอด dog_info ที่จะคืนค่าชื่อของสุนัขในรูปแบบ "Dog's name: [name]"
ตัวอย่างผลลัพธ์:

=====================================================================================================
animal = Animal("Generic Animal")
dog = Dog("Buddy")

print(animal.speak())  # Output: Animal sound
print(dog.speak())     # Output: Woof!
print(dog.dog_info())  # Output: Dog's name: Buddy

=====================================================================================================
แบบฝึกหัดที่ 4: สร้างคลาสที่มีตัวแปรของคลาส
โจทย์: สร้างคลาส Library ที่มีคุณสมบัติดังนี้:

ตัวแปรของคลาส: total_books (เก็บจำนวนหนังสือทั้งหมดในห้องสมุด)
เมธอดของคลาส: add_books เพื่อเพิ่มจำนวนหนังสือในห้องสมุด
ตัวแปรของออบเจ็กต์: name, books
เมธอดของออบเจ็กต์: add_book เพื่อเพิ่มหนังสือในห้องสมุดแต่ละแห่ง และเพิ่มจำนวนหนังสือทั้งหมดในห้องสมุดด้วย
ตัวอย่างผลลัพธ์:
=====================================================================================================
library1 = Library("Central Library")
library2 = Library("Community Library")

library1.add_book("1984")
library1.add_book("To Kill a Mockingbird")
library2.add_book("Pride and Prejudice")

print(Library.total_books)  # Output: 3

=====================================================================================================
แบบฝึกหัดที่ 5: การใช้งานเมธอดพิเศษ __str__
โจทย์: สร้างคลาส Student ที่มีคุณสมบัติดังนี้:

ตัวแปรของออบเจ็กต์: name, age, grade
เมธอดพิเศษ __str__ ที่จะคืนค่าข้อมูลนักเรียนในรูปแบบ "Student Name: [name], Age: [age], Grade: [grade]"
ตัวอย่างผลลัพธ์:
=====================================================================================================
student1 = Student("Alice", 20, "A")
student2 = Student("Bob", 22, "B")

print(student1)  # Output: Student Name: Alice, Age: 20, Grade: A
print(student2)  # Output: Student Name: Bob, Age: 22, Grade: B

=====================================================================================================
วิธีการทำแบบฝึกหัด:
อ่านโจทย์และทำความเข้าใจกับสิ่งที่ต้องการ
สร้างคลาสตามที่โจทย์ระบุ
สร้างตัวแปรและเมธอดตามที่โจทย์ระบุ
ทดสอบคลาสโดยสร้างออบเจ็กต์และเรียกใช้เมธอดตามตัวอย่างผลลัพธ์ที่ให้มา
ตรวจสอบผลลัพธ์และแก้ไขโค้ดถ้ามีข้อผิดพลาด
